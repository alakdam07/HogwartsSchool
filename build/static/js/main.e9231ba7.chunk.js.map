{"version":3,"sources":["components/CreateStudent/Create.js","components/Table/Table.js","components/Display/Display.js","components/Edit/Editing.js","components/Herocard/Herocard.js","components/AddCourse/AddCourse.js","components/Nav/Nav.js","App.js","serviceWorker.js","index.js"],"names":["Create","useState","name","birthday","address","zipcode","city","phone","email","state","setState","error","setError","loading","setLoading","onChangeStudent","e","target","id","value","Fragment","align","className","onSubmit","preventDefault","obj","axios","post","then","res","window","location","catch","type","onChange","required","disabled","Table","props","to","onClick","delete","reload","err","console","log","Display","students","count","item","searchItem","setsearchItem","useEffect","get","response","data","nameFilter","filter","list","toLowerCase","includes","placeholder","colSpan","map","object","index","key","Edit","match","params","put","history","push","Herocard","courses","gymList","moment","startdate","format","enddate","AddCourse","studentId","student","setStudents","addCourse","getStudent","Nav","href","src","alt","App","exact","path","component","Editing","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.e9231ba7.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Create = () => {\r\n  const [state, setState] = useState({\r\n    name: \"\",\r\n    birthday: \"\",\r\n    address: \"\",\r\n    zipcode: \"\",\r\n    city: \"\",\r\n    phone: \"\",\r\n    email: \"\"\r\n  });\r\n\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const onChangeStudent = e => {\r\n    setState({\r\n      ...state,\r\n      [e.target.id]: e.target.value\r\n    });\r\n  };\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    const obj = {\r\n      name: state.name,\r\n      birthday: state.birthday,\r\n      address: state.address,\r\n      zipcode: state.zipcode,\r\n      city: state.city,\r\n      phone: state.phone,\r\n      email: state.email\r\n    };\r\n\r\n    axios\r\n      .post(\"/students\", obj)\r\n      .then(res => {\r\n        window.location = \"/display\";\r\n      })\r\n      .catch(error => {\r\n        setError(error);\r\n      });\r\n    setLoading(false);\r\n    setState({\r\n      name: \"\",\r\n      birthday: \"\",\r\n      address: \"\",\r\n      zipcode: \"\",\r\n      city: \"\",\r\n      phone: \"\",\r\n      email: \"\"\r\n    });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <h3 align=\"center\">Student registration form</h3>\r\n\r\n      {error ? (\r\n        <h3 align=\"center\" className=\"red-text\">\r\n          This student is already registered\r\n        </h3>\r\n      ) : null}\r\n      <form onSubmit={onSubmit}>\r\n        <div className=\"form-group\">\r\n          <label>Student Name: </label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            value={state.name}\r\n            onChange={onChangeStudent}\r\n            id=\"name\"\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Birthday: </label>\r\n          <input\r\n            type=\"date\"\r\n            className=\"form-control\"\r\n            value={state.birthday}\r\n            onChange={onChangeStudent}\r\n            id=\"birthday\"\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Address: </label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            value={state.address}\r\n            onChange={onChangeStudent}\r\n            id=\"address\"\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Zipcode: </label>\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control\"\r\n            value={state.zipcode}\r\n            onChange={onChangeStudent}\r\n            id=\"zipcode\"\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>City: </label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            value={state.city}\r\n            onChange={onChangeStudent}\r\n            id=\"city\"\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Phone: </label>\r\n          <input\r\n            type=\"tel\"\r\n            className=\"form-control\"\r\n            value={state.phone}\r\n            onChange={onChangeStudent}\r\n            id=\"phone\"\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Email: </label>\r\n          <input\r\n            type=\"email\"\r\n            className=\"form-control\"\r\n            value={state.email}\r\n            onChange={onChangeStudent}\r\n            id=\"email\"\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <button\r\n            className=\"btn waves-effect blue lighten-1\"\r\n            type=\"submit\"\r\n            name=\"action\"\r\n            disabled={loading}\r\n          >\r\n            {loading ? \"loading...\" : \"save\"}\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Create;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst Table = props => {\r\n  const removeData = () => {\r\n    axios\r\n      .delete(\"/students/\" + props.obj.id)\r\n      .then(() => {\r\n        window.location.reload();\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <tr>\r\n        <td>{props.obj.name}</td>\r\n        <td>{props.obj.birthday}</td>\r\n        <td>{props.obj.address}</td>\r\n        <td>{props.obj.zipcode}</td>\r\n        <td>{props.obj.city}</td>\r\n        <td>{props.obj.phone}</td>\r\n        <td>{props.obj.email}</td>\r\n        <td>\r\n          <Link\r\n            to={\"/edit/\" + props.obj.id}\r\n            className=\"waves-effect waves-light btn\"\r\n          >\r\n            Edit\r\n          </Link>\r\n        </td>\r\n        <td>\r\n          <button onClick={removeData} className=\"waves-effect red btn \">\r\n            Remove\r\n          </button>\r\n        </td>\r\n      </tr>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Table from \"../Table/Table\";\r\nimport \"./Display.css\";\r\nconst Display = () => {\r\n  const [state, setState] = useState({ students: [], count: \"\" });\r\n  const [searchItem, setsearchItem] = useState({\r\n    item: \"\"\r\n  });\r\n\r\n  const Search = e => {\r\n    setsearchItem({ item: e.target.value });\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"/students\")\r\n      .then(response => {\r\n        setState({\r\n          students: response.data.students,\r\n          count: response.data.count\r\n        });\r\n      })\r\n      .catch(function(error) {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n  const nameFilter = state.students.filter(list => {\r\n    return list.name.toLowerCase().includes(searchItem.item.toLowerCase());\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <h3 align=\"center\">Student tables</h3>\r\n      <p align=\"center\">Total students: {state.count}</p>\r\n      <div className=\"input-body\">\r\n        <div className=\"row\">\r\n          <div className=\"input-field col s6\">\r\n            <input placeholder=\"search student\" onChange={Search} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <table className=\"table table-striped\">\r\n        <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Date of birth</th>\r\n            <th>Address</th>\r\n            <th>Zipcode</th>\r\n            <th>City</th>\r\n            <th>Phone</th>\r\n            <th>Email</th>\r\n            <th colSpan=\"2\">Action</th>\r\n          </tr>\r\n        </thead>\r\n        {nameFilter.map((object, index) => {\r\n          return (\r\n            <tbody key={index}>\r\n              <Table obj={object} />\r\n            </tbody>\r\n          );\r\n        })}\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Display;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Edit = props => {\r\n  const [state, setState] = useState({\r\n    name: \"\",\r\n    birthday: \"\",\r\n    address: \"\",\r\n    zipcode: \"\",\r\n    city: \"\",\r\n    phone: \"\",\r\n    email: \"\"\r\n  });\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"http://localhost:5000/students/\" + props.match.params.id)\r\n      .then(response => {\r\n        setState({\r\n          name: response.data.name,\r\n          birthday: response.data.birthday,\r\n          address: response.data.address,\r\n          zipcode: response.data.zipcode,\r\n          city: response.data.city,\r\n          phone: response.data.phone,\r\n          email: response.data.email\r\n        });\r\n      })\r\n      .catch(function(error) {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  const onChangeName = e => {\r\n    setState({\r\n      name: e.target.value\r\n    });\r\n  };\r\n  const onChangeBirthday = e => {\r\n    setState({\r\n      birthday: e.target.value\r\n    });\r\n  };\r\n  const onChangAddress = e => {\r\n    setState({\r\n      address: e.target.value\r\n    });\r\n  };\r\n  const onChangeZipcode = e => {\r\n    setState({\r\n      zipcode: e.target.value\r\n    });\r\n  };\r\n\r\n  const onChangeCity = e => {\r\n    setState({\r\n      city: e.target.value\r\n    });\r\n  };\r\n  const onChangePhone = e => {\r\n    setState({\r\n      phone: e.target.value\r\n    });\r\n  };\r\n  const onChangeEmail = e => {\r\n    setState({\r\n      email: e.target.value\r\n    });\r\n  };\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    const obj = {\r\n      name: state.name,\r\n      birthday: state.birthday,\r\n      address: state.address,\r\n      zipcode: state.zipcode,\r\n      city: state.city,\r\n      phone: state.phone,\r\n      email: state.email\r\n    };\r\n    axios\r\n      .put(\"/students/\" + props.match.params.id, obj)\r\n      .then(res => console.log(res.data));\r\n    setLoading(false);\r\n    props.history.push(\"/display\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3 align=\"center\">Student </h3>\r\n      <form onSubmit={onSubmit}>\r\n        <div className=\"form-group\">\r\n          <label>Student Name: </label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            value={state.name}\r\n            onChange={onChangeName}\r\n            id=\"name\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Birthday: </label>\r\n          <input\r\n            type=\"date\"\r\n            className=\"form-control\"\r\n            value={state.birthday}\r\n            onChange={onChangeBirthday}\r\n            id=\"birthday\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Address: </label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            value={state.address}\r\n            onChange={onChangAddress}\r\n            id=\"address\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Zipcode: </label>\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control\"\r\n            value={state.zipcode}\r\n            onChange={onChangeZipcode}\r\n            id=\"zipcode\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>City: </label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            value={state.city}\r\n            onChange={onChangeCity}\r\n            id=\"city\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Phone: </label>\r\n          <input\r\n            type=\"tel\"\r\n            className=\"form-control\"\r\n            value={state.phone}\r\n            onChange={onChangePhone}\r\n            id=\"phone\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Email: </label>\r\n          <input\r\n            type=\"email\"\r\n            className=\"form-control\"\r\n            value={state.email}\r\n            onChange={onChangeEmail}\r\n            id=\"email\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <button\r\n            className=\"btn waves-effect blue lighten-1\"\r\n            type=\"submit\"\r\n            name=\"action\"\r\n            disabled={loading}\r\n          >\r\n            {loading ? \"loading...\" : \"save\"}\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Edit;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./Herocard.css\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nconst Herocard = () => {\r\n  const [state, setState] = useState({ students: [], count: \"\" });\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"/students\")\r\n      .then(response => {\r\n        setState({ students: response.data.students });\r\n      })\r\n      .catch(function(error) {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n  // console.log(state);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <section className=\"section_one\">\r\n        <h3 className=\"sectionOne animated fadeInUp delay-1s heroText\">\r\n          Hogwarts School\r\n        </h3>\r\n      </section>\r\n      <section className=\"section_two\">\r\n        <div className=\"cardsPosition\">\r\n          {state.students.map((list, id) => {\r\n            return (\r\n              <div className=\"cards\" key={id}>\r\n                <div className=\"row\">\r\n                  <div>\r\n                    <div className=\"col s6 m5\">\r\n                      <div className=\"card blue-grey darken-1 animated fadeInUp delay-1.5s\">\r\n                        <div className=\"card-content white-text\">\r\n                          {\" \"}\r\n                          <span className=\"card-title\">{list.name}</span>\r\n                          {list.courses.map((gymList, id) => {\r\n                            return (\r\n                              <div key={id}>\r\n                                <p>{gymList.name}</p>\r\n                                <p>\r\n                                  Startdate:{\" \"}\r\n                                  {moment(gymList.startdate).format(\"L\")}\r\n                                </p>\r\n                                <p>\r\n                                  Enddate: {moment(gymList.enddate).format(\"L\")}\r\n                                </p>\r\n                              </div>\r\n                            );\r\n                          })}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </section>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Herocard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nconst AddCourse = () => {\r\n  const [state, setState] = useState({\r\n    name: \"\",\r\n    startdate: \"\",\r\n    enddate: \"\",\r\n    studentId: \"\"\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const [students, setStudents] = useState({ student: [] });\r\n  const addCourse = e => {\r\n    setState({\r\n      ...state,\r\n      [e.target.id]: e.target.value\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getStudent();\r\n  }, []);\r\n  const getStudent = () => {\r\n    axios\r\n      .get(\"/students\")\r\n      .then(response => {\r\n        setStudents({ student: response.data.students });\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    const obj = {\r\n      name: state.name,\r\n      startdate: state.startdate,\r\n      enddate: state.enddate,\r\n      studentId: state.studentId\r\n    };\r\n    axios\r\n      .post(\"/courses\", obj)\r\n      .then(res => console.log(res.data))\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n    setLoading(false);\r\n    setState({\r\n      name: \"\",\r\n      startdate: \"\",\r\n      enddate: \"\",\r\n      studentId: \"\"\r\n    });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <h3 align=\"center\">Course enrollment</h3>\r\n      <form onSubmit={onSubmit}>\r\n        <div className=\"form-group\">\r\n          <label>Course Name: </label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            value={state.name}\r\n            onChange={addCourse}\r\n            id=\"name\"\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Startdate: </label>\r\n          <input\r\n            type=\"date\"\r\n            className=\"form-control\"\r\n            value={state.startdate}\r\n            onChange={addCourse}\r\n            id=\"startdate\"\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Endate: </label>\r\n          <input\r\n            type=\"date\"\r\n            className=\"form-control\"\r\n            value={state.enddate}\r\n            onChange={addCourse}\r\n            id=\"enddate\"\r\n            required\r\n          />\r\n        </div>\r\n        <select id=\"studentId\" onChange={addCourse} className=\"browser-default\">\r\n          <option>Choose student</option>\r\n          {students.student.map(list => {\r\n            return (\r\n              <option key={list.id} value={list.id}>\r\n                {list.name}\r\n              </option>\r\n            );\r\n          })}\r\n        </select>\r\n        <br></br>\r\n        <button\r\n          className=\"btn waves-effect blue lighten-1\"\r\n          type=\"submit\"\r\n          name=\"action\"\r\n          disabled={loading}\r\n        >\r\n          {loading ? \"loading...\" : \"save\"}\r\n        </button>\r\n      </form>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default AddCourse;\r\n","import React from \"react\";\r\nimport \"./Nav.css\";\r\nexport default function Nav() {\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"navbar-fixed\">\r\n        <nav>\r\n          <div className=\"nav-wrapper red\">\r\n            <a href=\"/\" className=\"brand-logo\">\r\n              <img\r\n                src=\"https://res.cloudinary.com/dtnhtcwwg/image/upload/v1585562020/hogwarts-7917_f42rzn.png\"\r\n                alt=\"pic\"\r\n                className=\"img\"\r\n                to=\"/home\"\r\n              />\r\n            </a>\r\n            <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\r\n              <li>\r\n                <a href=\"/\">Home</a>\r\n              </li>\r\n              <li>\r\n                <a href=\"/display\">Hero tables</a>\r\n              </li>\r\n              <li>\r\n                <a href=\"/create\"> Add new student</a>\r\n              </li>\r\n              <li>\r\n                <a href=\"/addcourse\">Enrollment</a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </nav>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport Create from \"./components/CreateStudent/Create\";\nimport Display from \"./components/Display/Display\";\nimport Editing from \"./components/Edit/Editing\";\nimport Herocard from \"./components/Herocard/Herocard\";\nimport AddCourse from \"./components/AddCourse/AddCourse\";\nimport Nav from \"./components/Nav/Nav\";\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <Router>\n        <Nav />\n        <Switch>\n          <Route exact path=\"/\" component={Herocard} />\n          <Route exact path=\"/create\" component={Create} />\n          <Route exact path=\"/display\" component={Display} />\n          <Route exact path=\"/edit/:id\" component={Editing} />\n          <Route exact path=\"/addcourse\" component={AddCourse} />\n        </Switch>\n      </Router>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}